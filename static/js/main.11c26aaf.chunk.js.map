{"version":3,"sources":["components/chart/Bar.js","components/images/Image.js","containers/Demo.js","components/utils/hooks.js","components/text/index.js","App.js","serviceWorker.js","index.js","assets/bbc.png","assets/loading.svg"],"names":["Bar","barData","windowSize","useWindowSize","innerWidth","getWidth","useCallback","elementWidth","useEffect","Object","keys","length","i","map","data","country","formattedData","values","flat","Infinity","reduce","acc","cur","date","confirmed","push","sort","a","b","drawChart","time","margin","height","width","minDate","d3","d","moment","maxDate","g","append","attr","x","domain","range","y","call","ticks","every","padding","yAxis","text","dateLabel","casesLabel","recoveredLabel","deathsLabel","getTotal","key","update","tenResults","slice","t","duration","cases","selectAll","barLabel","recovered","deaths","exit","remove","enter","merge","transition","bandwidth","toLocaleString","format","document","getElementsByClassName","BarChart","id","toFixed","toString","styled","div","LinkImage","src","maxWidth","link","href","Link","alt","data-testid","img","props","Demo","useState","loading","setLoading","url","initialValue","setData","errorMsg","setErrorMsg","fetchData","axios","result","e","message","console","log","useFetch","Charts","Loading","loadingSvg","style","opacity","UpdatedReactMarkdown","source","escapeHtml","bbcChart","ReactMarkdown","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.11c26aaf.chunk.js","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport PropTypes from 'prop-types';\nimport useWindowSize from \"@rehooks/window-size\";\nimport moment from \"moment\";\nimport styled from 'styled-components';\nimport * as d3 from \"d3\";\n\n// TODO \n// Add animations \n// Stop and start button\n// xAais process arrow \n// yAxis bar styling \n\nexport default function Bar({ barData }) {\n  const windowSize = useWindowSize().innerWidth;\n\n  const getWidth = useCallback(() => {\n    if (windowSize < 1024) {\n      return windowSize * 0.7;\n    } else {\n      return 700;\n    }\n  }, [windowSize]);\n\n  const elementWidth = getWidth() + 100;\n  useEffect(() => {\n    if (!Object.keys(barData).length) {\n      return;\n    }\n\n    // TODO refactor formatting data -_- \n    for (let i in barData) {\n      barData[i].map(data => {\n        data.country = i;\n        return data;\n      });\n    }\n\n    const formattedData = Object.values(barData).flat(Infinity).reduce((acc, cur) => {\n      if (!acc[cur.date])\n        acc[cur.date] = [];\n      if (cur.confirmed > 0)\n        acc[cur.date].push(cur);\n\n      acc[cur.date].sort((a, b) => { return b.confirmed - a.confirmed });\n      return acc;\n    }, []);\n\n    const data = Object.values(formattedData);\n\n    const drawChart = () => {\n      let time = 0;\n\n      const margin = { left: 95, right: 20, top: 20, bottom: 30 };\n      const height = 475 - margin.top - margin.bottom;\n      const width = getWidth();\n\n      const minDate = d3.min(data[0], d => {\n        return moment(d.date);\n      });\n      const maxDate = d3.max(data[data.length - 1], d => {\n        return moment(d.date);\n      });\n\n      const g = d3\n        .select('#bar')\n        .append(\"svg\")\n        .attr(\"class\", \"bar-svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      const x = d3\n        .scaleTime()\n        .domain([minDate, maxDate])\n        .range([0, width - 60]);\n\n      const xAxis = g\n        .attr(\"class\", \"x axis\")\n        .append(\"g\")\n        .call(d3.axisBottom(x).ticks(d3.timeWeek.every(windowSize < 700 ? 6 : 3)))\n        .attr(\"transform\", `translate(0,${height})`);\n\n      const y = d3\n        .scaleBand()\n        .range([50, height])\n        .padding(0.2);\n\n      const yAxis = d3\n        .axisLeft(y);\n      g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n\n      const title = g\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"y\", 0)\n        .attr(\"x\", width / 2 - 40)\n        .attr(\"class\", \"title-label\")\n      title.text(\"Corona Virus Spread\")\n\n      const dateLabel = g\n        .append(\"text\")\n        .attr(\"y\", height - 80)\n        .attr(\"x\", width - 65)\n        .attr(\"class\", \"date-label\")\n        .attr(\"fill\", \"#575656\")\n\n      const casesLabel = g\n        .append(\"text\")\n        .attr(\"y\", height - 60)\n        .attr(\"x\", width - 65)\n        .attr(\"class\", \"case-label\")\n        .attr(\"fill\", \"#5d99cb\");\n\n      const recoveredLabel = g\n        .append(\"text\")\n        .attr(\"y\", height - 40)\n        .attr(\"x\", width - 65)\n        .attr(\"class\", \"recovered-label\")\n        .attr(\"fill\", \"#4fc486\");\n\n      const deathsLabel = g\n        .append(\"text\")\n        .attr(\"y\", height - 20)\n        .attr(\"x\", width - 65)\n        .attr(\"class\", \"deaths-label\")\n        .attr(\"fill\", \"#b04c3b\");\n\n      function getTotal(data, key) {\n        return data.reduce((acc, cur) => acc + cur[key], 0)\n      }\n\n      d3.interval(() => {\n        time = time < data.length - 1 ? time + 1 : 0;\n        update(data[time]);\n      }, 180);\n\n      update(data[0]);\n\n      function update(data) {\n\n        const tenResults = data.slice(0, 10);\n\n        let t = d3.transition().duration(180);\n        let cases = g.selectAll(\".cases\").data(tenResults);\n        let barLabel = g.selectAll(\".bar\").data(tenResults);\n        let recovered = g.selectAll(\".recovered\").data(tenResults);\n        let deaths = g.selectAll(\".deaths\").data(tenResults);\n\n        cases\n          .exit()\n          .attr(\"class\", \"exit cases\")\n          .remove();\n\n        barLabel\n          .exit()\n          .attr(\"class\", \"exit bar\")\n          .remove();\n\n        recovered\n          .exit()\n          .attr(\"class\", \"exit recovered\")\n          .remove();\n\n        deaths\n          .exit()\n          .attr(\"class\", \"exit deaths\")\n          .remove();\n\n        x.domain([0, d3.max(tenResults, d => d.confirmed)]);\n        y.domain(tenResults.map(d => d.country));\n\n        cases\n          .enter()\n          .append('rect')\n          .attr(\"class\", \"enter cases\")\n          .merge(cases)\n          .transition(t)\n          .attr(\"y\", d => y(d.country))\n          .attr(\"width\", d => x(d.confirmed))\n          .attr(\"height\", d => y.bandwidth())\n          .attr(\"z-index\", 1)\n          .attr(\"fill\", \"#5d99cb\")\n\n        barLabel\n          .enter()\n          .append('text')\n          .attr(\"class\", \"enter bar\")\n          .merge(barLabel)\n          .transition(t)\n          .attr(\"y\", d => y(d.country) + 20)\n          .attr(\"x\", d => x(d.confirmed) + 10)\n          .attr(\"whiteSpace\", \"nowrap\")\n          .attr(\"z-index\", 6)\n          .attr(\"height\", d => y.bandwidth())\n          .text(d => (d.confirmed.toLocaleString()))\n          .attr(\"fill\", \"#000\");\n\n        recovered\n          .enter()\n          .append('rect')\n          .attr(\"class\", \"enter recovered\")\n          .merge(recovered)\n          .transition(t)\n          .attr(\"y\", d => y(d.country))\n          .attr(\"width\", d => x(d.recovered))\n          .attr(\"height\", d => y.bandwidth())\n          .attr(\"z-index\", 2)\n          .attr(\"fill\", \"#4fc486\");\n\n        deaths\n          .enter()\n          .append('rect')\n          .attr(\"class\", \"enter deaths\")\n          .merge(deaths)\n          .transition(t)\n          .attr(\"y\", d => y(d.country))\n          .attr(\"width\", d => x(d.deaths))\n          .attr(\"height\", d => y.bandwidth())\n          .attr(\"z-index\", 3)\n          .attr(\"fill\", \"#b04c3b\");\n\n        g.selectAll(\".y.axis\")\n          .call(yAxis)\n          .selectAll(\".domain, .tick line\")\n          .remove();\n\n        dateLabel.text(moment(data[0].date).format(\"D MMM\"))\n        casesLabel.text(`Cases: ${getTotal(data, 'confirmed').toLocaleString()}`);\n        recoveredLabel.text(`Recovered: ${getTotal(data, 'recovered').toLocaleString()}`);\n        deathsLabel.text(`Deaths: ${getTotal(data, 'deaths').toLocaleString()}`);\n\n      }\n    };\n\n    // The chart is redrawn when the device orientation is changed.\n    // So if present remove it.\n    if (document.getElementsByClassName(\"bar-svg\").length) {\n      document.getElementsByClassName(\"bar-svg\")[0].remove();\n      drawChart();\n    } else {\n      drawChart();\n    }\n  }, [barData, getWidth]);\n  return (\n    <BarChart>\n      <div id='bar' width={elementWidth.toFixed().toString()} height='475' />\n    </BarChart>\n  );\n}\n\nconst BarChart = styled.div`\n  .bar-svg{\n    margin: 0 auto;\n    display: block;\n  }\n\n  .covid-title{\n    text-align: center;\n    font-size: 20px;\n  }\n\n  .date-label, .case-label, .recovered-label, .deaths-label{\n    text-anchor: end;\n  }\n  .case-label, .recovered-label, .deaths-label{\n    font-size: 18px;\n  }\n\n  .date-label{\n    font-size: 23px;\n  }\n  .title-label{\n    font-size: 24px;\n    fill: #575656;\n  }\n\n  .enter.bar{\n    font-size: 12px;\n  }\n\n  @media (max-width: 425px) {\n    .case-label, .recovered-label, .deaths-label{\n      font-size: 10px;\n    }\n    .case-label{\n      margin-top: 10px;\n      position: relative;\n      \n    }\n    .covid-title{\n      width: 45%;\n    }\n    .date-label{\n      font-size: 13px;\n    }\n  \n    .title-label{\n      font-size: 20px;\n    }\n    .enter.bar{\n      font-size: 10px;\n    }\n  }\n`;\n\nBar.propTypes = {\n  barData: PropTypes.object.isRequired,\n}\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport function LinkImage({ src, width, maxWidth, link }) {\n  return (\n    <a href={link}>\n      <Link\n        src={src}\n        width={width}\n        maxWidth={maxWidth}\n        alt=\"\"\n        data-testid=\"img-link-test-id\"\n      />\n    </a>\n  );\n}\n\nconst Link = styled.img`\n  width: ${props => props.width};\n  max-width: ${props => props.maxWidth};\n  display:  block;\n  margin: 20px auto;\n`;\n\nLinkImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  maxWidth: PropTypes.string\n}","\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from \"react-markdown\";\nimport styled from 'styled-components';\nimport BarChart from '../components/chart/Bar';\nimport { useFetch } from '../components/utils/hooks';\nimport { LinkImage } from '../components/images/Image';\nimport { barInfo } from '../components/text';\nimport bbcChart from '../assets/bbc.png';\nimport loadingSvg from '../assets/loading.svg';\n\nexport default function Demo() {\n  const [loading, setLoading] = useState(false);\n  const barData = useFetch(\"https://pomber.github.io/covid19/timeseries.json\", {});\n\n  useEffect(() => {\n    if (!Object.keys(barData).length) {\n      setLoading(true);\n      return;\n    } else {\n      setLoading(false);\n    }\n  }, [barData])\n\n  return (\n    <Charts>\n      <Loading\n        src={loadingSvg}\n        alt=''\n        style={{ opacity: loading ? 1 : 0 }}\n      />\n      <BarChart barData={barData} />\n      <UpdatedReactMarkdown source={barInfo} escapeHtml={false} />\n      <LinkImage src={bbcChart} width=\"600px\" maxWidth=\"90%\"\n        link=\"https://www.bbc.co.uk/news/world-51235105\" />\n    </Charts>\n  );\n}\n\nconst UpdatedReactMarkdown = styled(ReactMarkdown)`\n  margin: 30px auto 40px;\n  width: 700px;\n\n  @media(max-width: 700px){\n    width: 95%;\n  }\n`;\n\nconst Charts = styled.div`\n  margin: 0 auto;\n\n  a:link {\n    color: #4fafc0;\n  }\n  \n  a:visited {\n    color: #359987;\n  }\n`\n\nconst Loading = styled.img`\n  display: block;\n  margin: 0 auto;\n  width: 100px;\n  z-index: 3;\n  background-repeat: no-repeat;\n`;\n\n\nDemo.propTypes = {\n  src: PropTypes.string,\n  barData: PropTypes.object,\n  source: PropTypes.string,\n  link: PropTypes.string\n}","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const useFetch = (url, initialValue) => {\n  const [data, setData] = useState(initialValue);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url);\n      setData(result.data);\n    };\n    try {\n      fetchData();\n    } catch (e) {\n      setErrorMsg(e.message);\n    }\n  }, [url]);\n  if (errorMsg) {\n    console.log(errorMsg);\n  }\n\n  return data;\n};\n","export const barInfo = `I was inspired to create this race chart after seeing a version just showing\n the cases in an article on the [BBC](https://www.bbc.co.uk/news/world-51235105). \n I felt it was a missed opportunity to not overlap the additional data.\n `;","import React from 'react';\nimport Demo from './containers/Demo';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Demo />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bbc.5362c54a.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.8f38e258.svg\";"],"sourceRoot":""}